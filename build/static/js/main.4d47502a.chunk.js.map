{"version":3,"sources":["utils/helpers.js","components/About/index.js","components/Nav/index.js","components/Contact/index.js","components/Projects/index.js","components/Resume/index.js","components/Broken/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","validateEmail","email","test","String","toLowerCase","About","id","Nav","props","updateCurrentPage","className","Button","onClick","require","Contact","validateString","useState","updateEmail","updateName","updateMessage","error","updateError","handleChange","e","target","name","value","length","onSubmit","preventDefault","console","log","htmlFor","onBlur","onChange","type","Projects","href","index","src","width","height","Broken","Footer","Date","getFullYear","App","page","Resume","renderCorrectPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4d47502a.chunk.js","sourcesContent":["export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  var re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <section>\r\n      <h1 id=\"about\">About</h1>\r\n      <div>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec bibendum turpis sed ex\r\n          condimentum molestie. Mauris condimentum lectus ut ornare dignissim. Mauris faucibus urna\r\n          mi, ac feugiat metus aliquam maximus. Proin aliquam justo nec diam vulputate vestibulum.\r\n          Aenean sollicitudin nulla at nisi ornare, nec suscipit massa eleifend. Morbi tristique\r\n          justo vel turpis sollicitudin, et tristique velit convallis. In hac habitasse platea\r\n          dictumst. Phasellus mattis nunc sed orci consequat laoreet. Praesent id nisl nibh.\r\n          Curabitur imperdiet ultricies mollis. In hac habitasse platea dictumst.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction Nav(props) {\r\n  const {\r\n    updateCurrentPage\r\n  } = props;\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n        <h1>Hannah Roddy</h1>\r\n        <Button onClick={() => updateCurrentPage(\"Contact\")} >Contact</Button>\r\n        <Button onClick={() => updateCurrentPage(\"About\")} >About</Button>\r\n        <Button onClick={() => updateCurrentPage(\"Projects\")} >Projects</Button>\r\n        <Button onClick={() => updateCurrentPage(\"Resume\")} >Resume</Button>\r\n      {/* <h2>\r\n        <a data-testid=\"link\" href=\"/\">\r\n          <span role=\"img\" aria-label=\"camera\">\r\n            {\" \"}\r\n            ðŸ“¸\r\n          </span>{\" \"}\r\n          Oh Snap!\r\n        </a>\r\n      </h2>\r\n      <nav>\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-2\">\r\n            <a\r\n              data-testid=\"about\"\r\n              href=\"#about\"\r\n              onClick={() => setContactSelected(false)}\r\n            >\r\n              About me\r\n            </a>\r\n          </li>\r\n          <li className={`mx-2 ${contactSelected && \"navActive\"}`}>\r\n            <span onClick={() => setContactSelected(true)}>Contact</span>\r\n          </li>\r\n          {categories.map((category) => (\r\n            <li\r\n              className={`mx-1 ${\r\n                currentCategory.name === category.name &&\r\n                !contactSelected &&\r\n                \"navActive\"\r\n              }`}\r\n              key={category.name}\r\n            >\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentCategory(category);\r\n                  setContactSelected(false);\r\n                }}\r\n              >\r\n                {capitalizeFirstLetter(category.name)}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav> */}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nconst { validateEmail, validateString } = require(\"../../utils/helpers\");\r\n\r\nconst Contact = () => {\r\n  const [email, updateEmail] = useState(\"\");\r\n  const [name, updateName] = useState(\"\");\r\n  const [message, updateMessage] = useState(\"\");\r\n  const [error, updateError] = useState(\"\");\r\n  const handleChange = (e) => {\r\n\r\n    if (e.target.name === \"email\") {\r\n      const isValid = validateEmail(e.target.value);\r\n      if (isValid) {\r\n        updateEmail(e.target.value);\r\n        updateError(\"\");\r\n      } else {\r\n        updateError(\"This is not a valid email.\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === \"name\") {\r\n      if (e.target.value.length >= 1) {\r\n        updateName(e.target.value);\r\n        updateError(\"\");\r\n      } else {\r\n        updateError(\"You must include a name.\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === \"message\") {\r\n      if (e.target.value.length >= 1) {\r\n        updateMessage(e.target.value);\r\n        updateError(\"\");\r\n      } else {\r\n        updateError(\"You must include a message.\");\r\n      }\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(`Message submitted to hannah.roddy@gmail.com from ${email}!`);\r\n  };\r\n  return (\r\n    <section>\r\n      <h2>Contact</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input name=\"name\" onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input name=\"email\" onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea name=\"message\" onBlur={handleChange} />\r\n        </div>\r\n        {error && <p>{error}</p>}\r\n        <button type=\"submit\">Send message</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <section>\r\n      <h2>Projects</h2>\r\n      <div>\r\n          <h3 href=\"github.com\">Project 1</h3>\r\n          <img href=\"github.com\"></img>\r\n          <p>Brief description of project</p>\r\n      </div>\r\n      <div>\r\n          <h3 href=\"github.com\">Project 2</h3>\r\n          <img href=\"github.com\"></img>\r\n          <p>Brief description of project</p>\r\n      </div>\r\n      <div>\r\n          <h3 href=\"github.com\">Project 3</h3>\r\n          <img href=\"github.com\"></img>\r\n          <p>Brief description of project</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react'\r\n\r\nconst index = () => {\r\n    return (\r\n        <div>\r\n            {/* //<a target=\"_blank\" href=\"dog.pdf\">Resume</a> */}\r\n            <embed src=\"dog.pdf\" width=\"80%\" height=\"500px\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\n\r\n\r\nconst Broken = (props) => {\r\n    const {\r\n        updateCurrentPage\r\n      } = props\r\n    return (\r\n        <section>\r\n            <h2>Whoops, this page is broken!</h2>\r\n            <button onClick={() => updateCurrentPage(\"About\")}>Go home</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Broken\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <p>Made by Hannah Roddy, {new Date().getFullYear()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from \"react\";\r\nimport About from \"./components/About/index\";\r\nimport Nav from \"./components/Nav/index\";\r\nimport Contact from \"./components/Contact/index\";\r\nimport Projects from \"./components/Projects/index\";\r\nimport Resume from \"./components/Resume/index\";\r\nimport Broken from \"./components/Broken/index\";\r\nimport Footer from \"./components/Footer/index\";\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n  const [page, updateCurrentPage] = useState(\"About\");\r\n  const renderCorrectPage = () => {\r\n    switch (page) {\r\n      case \"About\":\r\n        return <About />;\r\n\r\n      case \"Projects\":\r\n        return <Projects />;\r\n\r\n      case \"Contact\":\r\n        return <Contact />;\r\n\r\n        case \"Resume\":\r\n        return <Resume />;\r\n\r\n      default:\r\n        return <Broken updateCurrentPage={updateCurrentPage} />;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Nav updateCurrentPage={updateCurrentPage} />\r\n      {renderCorrectPage()}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}